---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      project: "connect-mysql"
      provider: "debezium"
      version: "0.3-SNAPSHOT"
      group: "io.debezium"
    name: "connect-mysql"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - port: 80
      protocol: "TCP"
      targetPort: 8083
    selector:
      project: "connect-mysql"
      provider: "debezium"
      group: "io.debezium"
- apiVersion: "v1"
  kind: "ReplicationController"
  metadata:
    annotations:
      fabric8.io/git-branch: "master"
      fabric8.io/git-commit: "733729bca970afa5e79b1e47302a7d57d8605f83"
    labels:
      project: "connect-mysql"
      provider: "debezium"
      version: "0.3-SNAPSHOT"
      group: "io.debezium"
    name: "connect-mysql"
  spec:
    replicas: 1
    selector:
      project: "connect-mysql"
      provider: "debezium"
      version: "0.3-SNAPSHOT"
      group: "io.debezium"
    template:
      metadata:
        annotations: {}
        labels:
          project: "connect-mysql"
          provider: "debezium"
          version: "0.3-SNAPSHOT"
          group: "io.debezium"
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "OFFSET_STORAGE_TOPIC"
            value: "my-connect-offsets"
          - name: "HOST_NAME"
            value: "0.0.0.0"
          - name: "BOOTSTRAP_SERVERS"
            value: "kafka:9092"
          - name: "CONFIG_STORAGE_TOPIC"
            value: "my-connect-configs"
          - name: "KAFKA_OPTS"
            value: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
          - name: "GROUP_ID"
            value: "connect-mysql"
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "docker.io/debezium/connect:0.3"
          imagePullPolicy: "IfNotPresent"
          name: "connect-mysql"
          ports:
          - containerPort: 8083
            name: "rest"
          - containerPort: 5005
            name: "debug"
          securityContext: {}
          volumeMounts: []
        imagePullSecrets: []
        nodeSelector: {}
        volumes: []
kind: "List"
